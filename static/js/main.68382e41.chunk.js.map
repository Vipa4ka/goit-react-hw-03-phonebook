{"version":3,"sources":["component/ElContactList/ElContactList.module.scss","component/ContactForm/ContactForm.module.scss","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/ElContactList/ElContactList.js","component/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","component/Filter/Filter.module.scss","component/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","state","name","number","handleNameChange","e","setState","target","value","handleTElChange","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","uuidv4","this","className","styles","container","label","htmlFor","input","type","id","onChange","pattern","title","required","Component","Filter","ElContactList","contact","onDeleteContacts","span","button","onClick","ContactList","contacts","ul","map","li","App","filter","addContacts","text","tel","add","find","alert","deleteContacts","contactId","prevState","changeFilter","getvisibleContacts","normalizedFilter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68382e41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ElContactList_button__3b8dR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__eaQX3\",\"input\":\"ContactForm_input__3lb6L\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleNameChange = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleTElChange = (e) => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const nameInputId = uuidv4();\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className={styles.container}>\r\n          <label className={styles.label} htmlFor={nameInputId}>\r\n            Name{\" \"}\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              id={nameInputId}\r\n              onChange={this.handleNameChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label} htmlFor={uuidv4()}>\r\n            Number{\" \"}\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleTElChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ElContactList.module.scss\";\r\nconst ElContactList = ({ contact, onDeleteContacts }) => (\r\n  <>\r\n    <span className={styles.span}>\r\n      {contact.name}: {contact.number}\r\n    </span>\r\n    <button\r\n      className={styles.button}\r\n      onClick={() => onDeleteContacts(contact.id)}\r\n    >\r\n      {\" \"}\r\n      Delete{\" \"}\r\n    </button>\r\n  </>\r\n);\r\n\r\nElContactList.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ElContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nimport ElContactList from \"../ElContactList\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContacts }) => (\r\n  <ul className={styles.ul}>\r\n    {contacts.map((contact) => (\r\n      <li className={styles.li} key={contact.id}>\r\n        <ElContactList contact={contact} onDeleteContacts={onDeleteContacts} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactForm from \"./component/ContactForm\";\r\nimport Filter from \"./component/Filter\";\r\nimport ContactList from \"./component/ContactList\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContacts = (text, tel) => {\r\n    const contactsId = uuidv4();\r\n    const add = {\r\n      id: contactsId,\r\n      name: text,\r\n      number: tel,\r\n    };\r\n\r\n    if (this.state.contacts.find((contact) => contact.name === add.name)) {\r\n      alert(`${add.name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [add, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContacts = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getvisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm onSubmit={this.addContacts} />\r\n          <h2>Contacts</h2>\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n          <ContactList\r\n            contacts={this.getvisibleContacts()}\r\n            onDeleteContacts={this.deleteContacts}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1tnG5\",\"input\":\"Filter_input__37Dhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__1YuMe\",\"ul\":\"ContactList_ul__2KMjl\"};"],"sourceRoot":""}