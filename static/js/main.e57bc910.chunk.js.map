{"version":3,"sources":["component/ElContactList/ElContactList.module.scss","component/ContactForm/ContactForm.module.scss","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/ElContactList/ElContactList.js","component/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","component/Filter/Filter.module.scss","component/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","state","name","number","handleNameChange","e","setState","target","value","handleTElChange","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","uuidv4","this","className","styles","container","label","htmlFor","input","type","id","onChange","pattern","title","required","Component","Filter","ElContactList","contact","onDeleteContacts","span","button","onClick","ContactList","contacts","ul","map","li","App","filter","addContacts","text","tel","add","find","alert","deleteContacts","contactId","prevState","changeFilter","getvisibleContacts","normalizedFilter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e57bc910.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ElContactList_button__3E3Qe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__U0oA0\",\"input\":\"ContactForm_input__3gjMz\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport styles from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n        \r\n    };\r\n\r\n    handleNameChange = e => {\r\n        this.setState({ name: e.target.value});\r\n    };\r\n\r\n    handleTElChange = e => {        \r\n        this.setState({number: e.target.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();       \r\n        this.props.onSubmit(this.state.name, this.state.number);        \r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    };\r\n\r\n\r\n    render() {\r\n        const nameInputId = uuidv4();\r\n        return (            \r\n     <form onSubmit={this.handleSubmit}>\r\n        <div className={styles.container}>\r\n          <label className={styles.label} htmlFor={nameInputId}>\r\n            Name <input\r\n           className={styles.input}\r\n           type=\"text\"\r\n           name=\"name\"\r\n           value={this.state.name}\r\n           id={nameInputId}\r\n           onChange={this.handleNameChange}\r\n           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n           required\r\n           />\r\n          </label>                \r\n          <label className={styles.label} htmlFor={uuidv4()}>\r\n            Number <input\r\n            className={styles.input}\r\n           type=\"tel\"\r\n           name=\"number\"\r\n           value={this.state.number}\r\n           onChange={this.handleTElChange}              \r\n           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n           title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n           required\r\n           />\r\n          </label>\r\n        </div>\r\n                \r\n        <button type=\"submit\">Add contact</button>        \r\n      </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nexport default ContactForm;","import React from \"react\";\r\n\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Filter.module.scss';\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label className={styles.label}>\r\n        Find contacts by name\r\n        <input className={styles.input} type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ElContactList.module.scss'\r\nconst ElContactList = ({ contact, onDeleteContacts }) => (\r\n    <>\r\n        <span className={styles.span}>\r\n        {contact.name}: {contact.number}\r\n        </span>            \r\n        <button className={styles.button} onClick={() => onDeleteContacts(contact.id)} > Delete </button>\r\n        \r\n    </>    \r\n\r\n);\r\n\r\n\r\nElContactList.propTypes = {\r\n  contact: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  \r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ElContactList;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.scss'\r\n\r\nimport ElContactList from \"../ElContactList\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContacts }) => (    \r\n    <ul className={styles.ul}>\r\n        {contacts.map(( contact) => (\r\n            <li className={styles.li} key={contact.id}>\r\n                <ElContactList\r\n                  contact={contact}            \r\n                  onDeleteContacts={onDeleteContacts}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>     \r\n);\r\n\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,      \r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default ContactList;","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n \n\nimport ContactForm from './component/ContactForm'\nimport Filter from './component/Filter'\nimport ContactList from './component/ContactList'\n\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n    \n  };  \n\n\n  addContacts = (text, tel) => {\n    const contactsId = uuidv4();\n    const add = {\n      id: contactsId,\n      name: text,\n      number: tel\n    };\n\n    if (this.state.contacts.find((contact) => contact.name === add.name)) {\n      alert(`${add.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({contacts}) => ({\n      contacts: [add, ...contacts]\n    })\n      )    \n  };\n\n  deleteContacts = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }))\n  };\n\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n  \n\n  getvisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  };\n   \n\n  render() {\n    const { filter} = this.state;\n    return (\n      <>\n        <div>\n         <h1>Phonebook</h1>         \n          <ContactForm\n            onSubmit={this.addContacts}\n          />\n         <h2>Contacts</h2>\n          <Filter\n            value={filter}\n            onChange={this.changeFilter}\n          />\n          <ContactList\n            contacts={this.getvisibleContacts()}\n            onDeleteContacts={this.deleteContacts}\n          />\n        </div>           \n      </>\n    );\n  }\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__AXzug\",\"input\":\"Filter_input__2g-wW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__kLoVH\",\"ul\":\"ContactList_ul__Ytit9\"};"],"sourceRoot":""}